import java.util.Arrays;
public  class QueueArr<T> {
    private T[]  queue;
    private int length;
    private int head;
    private int tail;
    public QueueArr() {
        queue = new T[5];
        length = 0;
        head =  0;
        tail  = -1;
    }
    public enqueue(T a) {
        int indexNew = Math.abs((tail + 1)%queue.length);
        if(queue[indexNew] != null) {
            resize();
        }
        queue[indexNew] = a;
        tail  = indexNew;
        length++;
    }
    public  void resize() {
        T[] temp = new  T[length * 1.5];
        int index = head;
        for(int i = 0; i < length; i++ index = (index + 1)%queue.length) {
            temp[i] = queue[index];
        }
        queue = temp;
    }
    public T dequeue() {
        T temp = a[head];
        a[head] = null;
        length--;
        head =  Math.abs((head + 1)%queue.length);
        return temp;
    }
    public String  toString() { 
        return  Arrays.toString(queue) + "Head:  "  +  head + "Tail: " + tail; 
    }
    public static void main(String  []args) {
        QueueArr<Integer> a = new QueueArr<Integer>();
        a.enqueue(1);
        System.out.println(a);
        a.enqueue(2);
        a.enqueue(3);
        a.enqueue(4);
        a.enqueue(5)
        a.enqueue(6);
        System.out.println(a);
        System.out.println(a.dequeue());
    }
}